module(unparameterized("CSharpPartialClassses"),[imports([module(unparameterized("Common"))])],[exports(conc-grammars(context-free-start-symbols([sort("Start")]),context-free-syntax([prod([iter-star(sort("Using")),iter-star(sort("Definition"))],sort("Start"),attrs([term("Start")])),prod([lit("namespace"),sort("ID"),lit("{"),iter-star(sort("Definition")),lit("}")],sort("Definition"),attrs([term("Namespace")])),prod([lit("partial"),lit("class"),sort("ID"),lit("{"),iter-star(sort("ClassBodyDecl")),lit("}")],sort("Definition"),attrs([term("PartialClass")])),prod([lit("partial"),lit("class"),sort("ID"),lit(":"),sort("ID"),lit("{"),iter-star(sort("ClassBodyDecl")),lit("}")],sort("Definition"),attrs([term("PartialClass")])),prod([lit("class"),sort("ID"),lit("{"),iter-star(sort("ClassBodyDecl")),lit("}")],sort("Definition"),attrs([term("Class")])),prod([lit("class"),sort("ID"),lit(":"),sort("ID"),lit("{"),iter-star(sort("ClassBodyDecl")),lit("}")],sort("Definition"),attrs([term("Class")])),prod([lit("interface"),sort("ID"),lit("{"),iter-star(sort("InterfaceBodyDecl")),lit("}")],sort("Definition"),attrs([term("Interface")])),prod([lit("interface"),sort("ID"),lit(":"),sort("ID"),lit("{"),iter-star(sort("InterfaceBodyDecl")),lit("}")],sort("Definition"),attrs([term("Interface")])),prod([lit("using"),sort("UsingPart"),lit(";")],sort("Using"),attrs([term("Using")])),prod([sort("ID")],sort("UsingPart"),attrs([term("UsingPart")])),prod([sort("UsingPart"),lit("."),sort("ID")],sort("UsingPart"),attrs([term("UsingPart")])),prod([sort("Type"),sort("ID"),lit(";")],sort("ClassBodyDecl"),attrs([term("FieldDef")])),prod([sort("MethodReturnType"),sort("ID"),lit("("),iter-star-sep(sort("Param"),lit(",")),lit(")"),lit("{"),iter-star(sort("Stm")),lit("}")],sort("ClassBodyDecl"),attrs([term("FunDef")])),prod([sort("MethodReturnType"),sort("ID"),lit("("),iter-star-sep(sort("Param"),lit(",")),lit(")"),lit(";")],sort("InterfaceBodyDecl"),attrs([term("FunDef")])),prod([sort("ID")],sort("Type"),attrs([term("Type")])),prod([lit("void")],sort("MethodReturnType"),attrs([term("VoidType"),prefer])),prod([lit("bool")],sort("Type"),attrs([term(ast("Type(\"Bool\")")),prefer])),prod([lit("int")],sort("Type"),attrs([term(ast("Type(\"Int\")")),prefer])),prod([lit("string")],sort("Type"),attrs([term(ast("Type(\"String\")")),prefer])),prod([sort("Type")],sort("MethodReturnType"),attrs([])),prod([sort("Type"),lit("["),lit("]")],sort("Type"),attrs([term("ArrayType")])),prod([sort("ID"),lit("("),iter-star-sep(sort("Exp"),lit(",")),lit(")")],sort("FunCall"),attrs([term("FunCall")])),prod([sort("Exp"),lit("."),sort("ID"),lit("("),iter-star-sep(sort("Exp"),lit(",")),lit(")")],sort("FunCall"),attrs([term("FunCall")])),prod([sort("Exp"),lit("."),sort("ID")],sort("FieldAccess"),attrs([term("FieldAccess")])),prod([lit("return"),sort("Exp"),lit(";")],sort("Stm"),attrs([term("Return"),prefer])),prod([sort("Type"),sort("ID"),lit(";")],sort("Stm"),attrs([term("VarDef")])),prod([sort("Type"),sort("ID"),lit("="),sort("Exp"),lit(";")],sort("Stm"),attrs([term("VarDef")])),prod([sort("ID"),lit("="),sort("Exp"),lit(";")],sort("Stm"),attrs([term("Assign")])),prod([lit("if"),lit("("),sort("Exp"),lit(")"),sort("Block")],sort("Stm"),attrs([term("If")])),prod([lit("if"),lit("("),sort("Exp"),lit(")"),sort("Block"),lit("else"),sort("Block")],sort("Stm"),attrs([term("IfElse")])),prod([lit("for"),lit("("),sort("Type"),sort("ID"),lit("="),sort("Exp"),lit(";"),sort("Exp"),lit(";"),sort("Stm"),lit(")"),sort("Block")],sort("Stm"),attrs([term("For")])),prod([lit("foreach"),lit("("),sort("Type"),sort("ID"),lit("in"),sort("Exp"),lit(")"),sort("Block")],sort("Stm"),attrs([term("ForEach")])),prod([sort("FunCall"),lit(";")],sort("Stm"),attrs([])),prod([sort("FieldAccess"),lit(";")],sort("Stm"),attrs([])),prod([lit("true")],sort("Exp"),attrs([term("True"),prefer])),prod([lit("false")],sort("Exp"),attrs([term("False"),prefer])),prod([sort("INT")],sort("Exp"),attrs([term("IntLit")])),prod([sort("STRING")],sort("Exp"),attrs([term("StrLit")])),prod([sort("ID")],sort("Exp"),attrs([term("VarRef")])),prod([sort("FunCall")],sort("Exp"),attrs([])),prod([sort("FieldAccess")],sort("Exp"),attrs([])),prod([lit("this")],sort("Exp"),attrs([term("This"),prefer])),prod([sort("Exp"),lit("+"),sort("Exp")],sort("Exp"),attrs([term("Add"),prefer])),prod([sort("Exp"),lit("-"),sort("Exp")],sort("Exp"),attrs([term("Sub"),prefer])),prod([sort("Exp"),lit("*"),sort("Exp")],sort("Exp"),attrs([term("Mul"),prefer])),prod([sort("Exp"),lit("/"),sort("Exp")],sort("Exp"),attrs([term("Div"),prefer])),prod([sort("Exp"),lit("=="),sort("Exp")],sort("Exp"),attrs([term("Eq"),prefer])),prod([sort("Exp"),lit("<"),sort("Exp")],sort("Exp"),attrs([term("Lt"),prefer])),prod([sort("Exp"),lit("<="),sort("Exp")],sort("Exp"),attrs([term("Lte"),prefer])),prod([sort("Exp"),lit(">"),sort("Exp")],sort("Exp"),attrs([term("Gt"),prefer])),prod([sort("Exp"),lit(">="),sort("Exp")],sort("Exp"),attrs([term("Gte"),prefer])),prod([lit("{"),iter-star(sort("Stm")),lit("}")],sort("Block"),attrs([term("Block")])),prod([sort("Stm")],sort("Block"),attrs([])),prod([sort("Type"),sort("ID")],sort("Param"),attrs([term("Param")]))])))])