module check

imports
  libstratego-lib
  include/Calculang
  lib/editor-common.generated
  calculate

rules
  
  editor-analyze:
    (ast, path, project-path) -> (ast, errors, warnings, notes)
    with
      editor-init;
      analyze;
      errors   := <constraint-errors> ast;
      warnings := [];
      notes    := <constraint-notes> ast

  analyze = topdown(try(record-var))

  record-var:
    Assign(x, e) -> Assign(x, e)
    with
      rules(
        GetVar :+ x -> e
      )
  
  constraint-errors = collect-all(constraint-error, conc)
  
  constraint-error:
    Var(x) -> (x, $[Variable [x] is not defined])
    where
      not(<GetVar> x)
  
  constraint-error:
    Assign(x, _) -> (x, $[Duplicate variable name])
    where
      not(<length> (<bagof-GetVar> x) => 1)
  
  constraint-notes = collect-all(constraint-note, conc)

  constraint-note:
    Assign(x, e) -> (x, $[Constant expression in assignment])
    where
      not(<oncetd(is-var)> e)
  
  is-var:
    Var(x) -> Var(x)
