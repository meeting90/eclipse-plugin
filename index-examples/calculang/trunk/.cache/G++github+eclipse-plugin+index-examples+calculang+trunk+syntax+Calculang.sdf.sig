module(unparameterized("Calculang"),[imports([module(unparameterized("Common"))])],[exports(conc-grammars(conc-grammars(conc-grammars(context-free-start-symbols([sort("Start")]),context-free-syntax([prod([sort("Exp")],sort("Start"),attrs([term(cons("Expr"))])),prod([sort("INT")],sort("Exp"),attrs([term(cons("Int"))])),prod([sort("Exp"),lit("*"),sort("Exp")],sort("Exp"),attrs([term(cons("Mul")),assoc(left)])),prod([sort("Exp"),lit("/"),sort("Exp")],sort("Exp"),attrs([term(cons("Div")),assoc(left)])),prod([sort("Exp"),lit("+"),sort("Exp")],sort("Exp"),attrs([term(cons("Plus")),assoc(left)])),prod([sort("Exp"),lit("-"),sort("Exp")],sort("Exp"),attrs([term(cons("Minus")),assoc(left)])),prod([lit("("),sort("Exp"),lit(")")],sort("Exp"),attrs([bracket]))])),context-free-priorities([chain([assoc-group(left,[prod([sort("Exp"),lit("*"),sort("Exp")],sort("Exp"),attrs([])),prod([sort("Exp"),lit("/"),sort("Exp")],sort("Exp"),attrs([]))]),assoc-group(left,[prod([sort("Exp"),lit("+"),sort("Exp")],sort("Exp"),attrs([])),prod([sort("Exp"),lit("-"),sort("Exp")],sort("Exp"),attrs([]))])])])),context-free-syntax([prod([iter-star(sort("Stm"))],sort("Start"),attrs([term(cons("Stm"))])),prod([sort("ID"),lit("="),sort("Exp")],sort("Stm"),attrs([term(cons("Assign"))])),prod([sort("ID")],sort("Exp"),attrs([term(cons("Var"))]))])))])