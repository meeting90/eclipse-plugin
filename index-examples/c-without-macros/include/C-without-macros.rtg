regular tree grammar
  start Start
  productions
    ListStarOfExpr0       -> ListPlusOfExpr0
    ListStarOfExpr0       -> <nil>()
    ListStarOfExpr0       -> <conc>(ListStarOfExpr0,ListStarOfExpr0)
    ListPlusOfExpr0       -> <conc>(ListStarOfExpr0,ListPlusOfExpr0)
    ListPlusOfExpr0       -> <conc>(ListPlusOfExpr0,ListStarOfExpr0)
    ListPlusOfExpr0       -> <conc>(ListPlusOfExpr0,ListPlusOfExpr0)
    ListPlusOfExpr0       -> <cons>(Expr,ListStarOfExpr0)
    ListStarOfField0      -> ListPlusOfField0
    ListStarOfField0      -> <nil>()
    ListStarOfField0      -> <conc>(ListStarOfField0,ListStarOfField0)
    ListPlusOfField0      -> <conc>(ListStarOfField0,ListPlusOfField0)
    ListPlusOfField0      -> <conc>(ListPlusOfField0,ListStarOfField0)
    ListPlusOfField0      -> <conc>(ListPlusOfField0,ListPlusOfField0)
    ListPlusOfField0      -> <cons>(Field,ListStarOfField0)
    ListStarOfStmt0       -> ListPlusOfStmt0
    ListStarOfStmt0       -> <nil>()
    ListStarOfStmt0       -> <conc>(ListStarOfStmt0,ListStarOfStmt0)
    ListPlusOfStmt0       -> <conc>(ListStarOfStmt0,ListPlusOfStmt0)
    ListPlusOfStmt0       -> <conc>(ListPlusOfStmt0,ListStarOfStmt0)
    ListPlusOfStmt0       -> <conc>(ListPlusOfStmt0,ListPlusOfStmt0)
    ListPlusOfStmt0       -> <cons>(Stmt,ListStarOfStmt0)
    ListStarOfParam0      -> ListPlusOfParam0
    ListStarOfParam0      -> <nil>()
    ListStarOfParam0      -> <conc>(ListStarOfParam0,ListStarOfParam0)
    ListPlusOfParam0      -> <conc>(ListStarOfParam0,ListPlusOfParam0)
    ListPlusOfParam0      -> <conc>(ListPlusOfParam0,ListStarOfParam0)
    ListPlusOfParam0      -> <conc>(ListPlusOfParam0,ListPlusOfParam0)
    ListPlusOfParam0      -> <cons>(Param,ListStarOfParam0)
    ListStarOfDefinition0 -> ListPlusOfDefinition0
    ListStarOfDefinition0 -> <nil>()
    ListStarOfDefinition0 -> <conc>(ListStarOfDefinition0,ListStarOfDefinition0)
    ListPlusOfDefinition0 -> <conc>(ListStarOfDefinition0,ListPlusOfDefinition0)
    ListPlusOfDefinition0 -> <conc>(ListPlusOfDefinition0,ListStarOfDefinition0)
    ListPlusOfDefinition0 -> <conc>(ListPlusOfDefinition0,ListPlusOfDefinition0)
    ListPlusOfDefinition0 -> <cons>(Definition,ListStarOfDefinition0)
    ListStarOfInclude0    -> ListPlusOfInclude0
    ListStarOfInclude0    -> <nil>()
    ListStarOfInclude0    -> <conc>(ListStarOfInclude0,ListStarOfInclude0)
    ListPlusOfInclude0    -> <conc>(ListStarOfInclude0,ListPlusOfInclude0)
    ListPlusOfInclude0    -> <conc>(ListPlusOfInclude0,ListStarOfInclude0)
    ListPlusOfInclude0    -> <conc>(ListPlusOfInclude0,ListPlusOfInclude0)
    ListPlusOfInclude0    -> <cons>(Include,ListStarOfInclude0)
    ListStarOfStringChar0 -> <string>
    ListPlusOfStringChar0 -> <string>
    OptLit0               -> <string>
    Type                  -> StructRef(ID)
    Type                  -> Pointer(Type)
    Type                  -> Void()
    Type                  -> Int()
    Type                  -> Char()
    Type                  -> Type(ID)
    Expr                  -> Cast(Type,Expr)
    Expr                  -> VarRef(ID)
    Expr                  -> Ref(Expr)
    Expr                  -> Deref(Expr)
    Expr                  -> DerefAccess(Expr,ID)
    Expr                  -> Access(Expr,ID)
    Expr                  -> SizeOf(Type)
    Expr                  -> Call(ID,ListStarOfExpr0)
    Expr                  -> IntLit(INT)
    Expr                  -> StrLit(STRING)
    Stmt                  -> Return(Expr)
    Stmt                  -> Assign(Expr,Expr)
    Stmt                  -> Stmt(Expr)
    Stmt                  -> VarDecl(Type,ID)
    Field                 -> Field(Type,ID)
    TypeDecl              -> StructDecl(ID,ListStarOfField0)
    TypeDecl              -> TypeDef(TypeDecl,ID)
    TypeDecl              -> TypeDef(Type,ID)
    Definition            -> TypeDecl(TypeDecl)
    Param                 -> Param(Type,ID)
    Definition            -> FunDecl(Type,ID,ListStarOfParam0,ListStarOfStmt0)
    Include               -> Include(UQSTRING)
    Include               -> Include(UQSTRING)
    Start                 -> Start(ListStarOfInclude0,ListStarOfDefinition0)
    EOF                   -> <string>
    CommentChar           -> <string>
    BackSlashChar         -> <string>
    StringChar            -> <string>
    STRING                -> <string>
    UQSTRING              -> <string>
    INT                   -> <string>
    ID                    -> <string>
