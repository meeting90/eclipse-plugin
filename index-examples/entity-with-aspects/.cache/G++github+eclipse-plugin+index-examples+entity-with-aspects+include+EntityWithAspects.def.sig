definition([module(unparameterized("Common"),[],[exports(conc-grammars(conc-grammars(lexical-syntax([prod([char-class(simple-charclass(present(conc(range(short("a"),short("z")),range(short("A"),short("Z")))))),iter-star(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),range(short("0"),short("9"))))))))],sort("ID"),attrs([])),prod([opt(lit("-")),iter(char-class(simple-charclass(present(range(short("0"),short("9"))))))],sort("INT"),attrs([])),prod([lit("\\\""),iter-star(sort("StringChar")),lit("\\\"")],sort("STRING"),attrs([])),prod([char-class(comp(simple-charclass(present(conc(short("\\\""),short("\\n"))))))],sort("StringChar"),attrs([])),prod([lit("\\\\\\\"")],sort("StringChar"),attrs([])),prod([sort("BackSlashChar")],sort("StringChar"),attrs([])),prod([lit("\\\\")],sort("BackSlashChar"),attrs([])),prod([char-class(simple-charclass(present(conc(short("\\ "),conc(short("\\t"),conc(short("\\n"),short("\\r")))))))],layout,attrs([])),prod([char-class(simple-charclass(present(short("\\*"))))],sort("CommentChar"),attrs([])),prod([lit("/*"),iter-star(alt(char-class(comp(simple-charclass(present(short("\\*"))))),sort("CommentChar"))),lit("*/")],layout,attrs([])),prod([lit("//"),iter-star(char-class(comp(simple-charclass(present(conc(short("\\n"),short("\\r"))))))),alt(char-class(simple-charclass(present(conc(short("\\n"),short("\\r"))))),sort("EOF"))],layout,attrs([])),prod([],sort("EOF"),attrs([]))]),lexical-restrictions([follow([sort("CommentChar")],single(char-class(simple-charclass(present(short("\\/")))))),follow([sort("INT")],single(char-class(simple-charclass(present(range(short("0"),short("9"))))))),follow([sort("ID")],single(char-class(simple-charclass(present(conc(range(short("a"),short("z")),conc(range(short("A"),short("Z")),conc(range(short("0"),short("9")),short("\\_"))))))))),follow([sort("EOF")],single(char-class(comp(simple-charclass(absent))))),follow([sort("BackSlashChar")],single(char-class(simple-charclass(present(short("\\\""))))))])),context-free-restrictions([follow([opt(layout)],single(char-class(simple-charclass(present(conc(short("\\ "),conc(short("\\t"),conc(short("\\n"),short("\\r"))))))))),follow([opt(layout)],single(seq(simple-charclass(present(short("\\/"))),single(char-class(simple-charclass(present(short("\\/")))))))),follow([opt(layout)],single(seq(simple-charclass(present(short("\\/"))),single(char-class(simple-charclass(present(short("\\*"))))))))])))]),module(unparameterized("EntityWithAspects"),[imports([module(unparameterized("Common"))])],[exports(conc-grammars(context-free-start-symbols([sort("Start")]),context-free-syntax([prod([lit("module"),sort("ID"),iter-star(sort("Import")),iter-star(sort("Definition"))],sort("Start"),attrs([term(cons("Module"))])),prod([lit("entity"),sort("ID"),lit("{"),iter-star(sort("Member")),lit("}")],sort("Definition"),attrs([term(cons("Entity"))])),prod([lit("import"),sort("ImportPart")],sort("Import"),attrs([term(cons("Import"))])),prod([sort("ID"),lit("."),lit("*")],sort("ImportPart"),attrs([term(cons("WildcardImport"))])),prod([sort("ID"),lit("."),sort("ID")],sort("ImportPart"),attrs([term(cons("EntityImport"))])),prod([lit("aspect"),sort("ID"),lit("{"),iter-star(sort("AspectMember")),lit("}")],sort("Definition"),attrs([term(cons("Aspect"))])),prod([lit("pointcut"),sort("ID"),lit("("),iter-star-sep(sort("Param"),lit(",")),lit(")"),lit(":"),iter-sep(sort("JoinPoint"),lit(","))],sort("AspectMember"),attrs([term(cons("Pointcut"))])),prod([lit("advice"),sort("ID"),sort("AdviceType"),lit("("),iter-star-sep(sort("Param"),lit(",")),lit(")"),lit(":"),sort("ID"),lit("("),iter-star-sep(sort("Exp"),lit(",")),lit(")"),sort("Stm")],sort("AspectMember"),attrs([term(cons("Advice"))])),prod([lit("before")],sort("AdviceType"),attrs([term(cons("Before"))])),prod([lit("after")],sort("AdviceType"),attrs([term(cons("After"))])),prod([lit("assigned"),lit("("),sort("Type"),lit(")")],sort("JoinPoint"),attrs([term(cons("Assigned"))])),prod([sort("ID"),lit(":"),sort("Type")],sort("Member"),attrs([term(cons("Property"))])),prod([sort("ID"),lit("("),iter-star-sep(sort("Param"),lit(",")),lit(")"),sort("Stm")],sort("Member"),attrs([term(cons("Function"))])),prod([sort("ID"),lit(":"),sort("Type")],sort("Param"),attrs([term(cons("Param"))])),prod([lit("var"),sort("ID"),lit(":"),sort("Type")],sort("Stm"),attrs([term(cons("VarDecl"))])),prod([lit("var"),sort("ID"),lit(":"),sort("Type"),lit("="),sort("Exp")],sort("Stm"),attrs([term(cons("VarDeclInit"))])),prod([sort("Exp"),lit("="),sort("Exp")],sort("Stm"),attrs([term(cons("Assign"))])),prod([lit("{"),iter-star(sort("Stm")),lit("}")],sort("Stm"),attrs([term(cons("Block"))])),prod([lit("print"),sort("Exp")],sort("Stm"),attrs([term(cons("Print"))])),prod([sort("ID"),lit("("),iter-star-sep(sort("Exp"),lit(",")),lit(")")],sort("Exp"),attrs([term(cons("Call"))])),prod([sort("ID")],sort("Exp"),attrs([term(cons("Var"))])),prod([sort("Exp"),lit("."),sort("ID")],sort("Exp"),attrs([term(cons("PropAccess"))])),prod([sort("STRING")],sort("Exp"),attrs([term(cons("StringLit"))])),prod([sort("INT")],sort("Exp"),attrs([term(cons("IntLit"))])),prod([sort("ID")],sort("Type"),attrs([term(cons("Type"))])),prod([lit("String")],sort("Type"),attrs([term(cons("StringType")),prefer])),prod([lit("Int")],sort("Type"),attrs([term(cons("IntType")),prefer]))])))])])