
regular tree grammar
  start Start
  productions
    ListStarOfExp0          -> ListPlusOfExp0
    ListStarOfExp0          -> <nil>()
    ListStarOfExp0          -> <conc>(ListStarOfExp0,ListStarOfExp0)
    ListPlusOfExp0          -> <conc>(ListStarOfExp0,ListPlusOfExp0)
    ListPlusOfExp0          -> <conc>(ListPlusOfExp0,ListStarOfExp0)
    ListPlusOfExp0          -> <conc>(ListPlusOfExp0,ListPlusOfExp0)
    ListPlusOfExp0          -> <cons>(Exp,ListStarOfExp0)
    ListStarOfStm0          -> ListPlusOfStm0
    ListStarOfStm0          -> <nil>()
    ListStarOfStm0          -> <conc>(ListStarOfStm0,ListStarOfStm0)
    ListPlusOfStm0          -> <conc>(ListStarOfStm0,ListPlusOfStm0)
    ListPlusOfStm0          -> <conc>(ListPlusOfStm0,ListStarOfStm0)
    ListPlusOfStm0          -> <conc>(ListPlusOfStm0,ListPlusOfStm0)
    ListPlusOfStm0          -> <cons>(Stm,ListStarOfStm0)
    ListStarOfParam0        -> ListPlusOfParam0
    ListStarOfParam0        -> <nil>()
    ListStarOfParam0        -> <conc>(ListStarOfParam0,ListStarOfParam0)
    ListPlusOfParam0        -> <conc>(ListStarOfParam0,ListPlusOfParam0)
    ListPlusOfParam0        -> <conc>(ListPlusOfParam0,ListStarOfParam0)
    ListPlusOfParam0        -> <conc>(ListPlusOfParam0,ListPlusOfParam0)
    ListPlusOfParam0        -> <cons>(Param,ListStarOfParam0)
    ListStarOfJoinPoint0    -> ListPlusOfJoinPoint0
    ListStarOfJoinPoint0    -> <nil>()
    ListStarOfJoinPoint0    -> <conc>(ListStarOfJoinPoint0,ListStarOfJoinPoint0)
    ListPlusOfJoinPoint0    -> <conc>(ListStarOfJoinPoint0,ListPlusOfJoinPoint0)
    ListPlusOfJoinPoint0    -> <conc>(ListPlusOfJoinPoint0,ListStarOfJoinPoint0)
    ListPlusOfJoinPoint0    -> <conc>(ListPlusOfJoinPoint0,ListPlusOfJoinPoint0)
    ListPlusOfJoinPoint0    -> <cons>(JoinPoint,ListStarOfJoinPoint0)
    ListStarOfAspectMember0 -> ListPlusOfAspectMember0
    ListStarOfAspectMember0 -> <nil>()
    ListStarOfAspectMember0 -> <conc>(ListStarOfAspectMember0,ListStarOfAspectMember0)
    ListPlusOfAspectMember0 -> <conc>(ListStarOfAspectMember0,ListPlusOfAspectMember0)
    ListPlusOfAspectMember0 -> <conc>(ListPlusOfAspectMember0,ListStarOfAspectMember0)
    ListPlusOfAspectMember0 -> <conc>(ListPlusOfAspectMember0,ListPlusOfAspectMember0)
    ListPlusOfAspectMember0 -> <cons>(AspectMember,ListStarOfAspectMember0)
    ListStarOfMember0       -> ListPlusOfMember0
    ListStarOfMember0       -> <nil>()
    ListStarOfMember0       -> <conc>(ListStarOfMember0,ListStarOfMember0)
    ListPlusOfMember0       -> <conc>(ListStarOfMember0,ListPlusOfMember0)
    ListPlusOfMember0       -> <conc>(ListPlusOfMember0,ListStarOfMember0)
    ListPlusOfMember0       -> <conc>(ListPlusOfMember0,ListPlusOfMember0)
    ListPlusOfMember0       -> <cons>(Member,ListStarOfMember0)
    ListStarOfDefinition0   -> ListPlusOfDefinition0
    ListStarOfDefinition0   -> <nil>()
    ListStarOfDefinition0   -> <conc>(ListStarOfDefinition0,ListStarOfDefinition0)
    ListPlusOfDefinition0   -> <conc>(ListStarOfDefinition0,ListPlusOfDefinition0)
    ListPlusOfDefinition0   -> <conc>(ListPlusOfDefinition0,ListStarOfDefinition0)
    ListPlusOfDefinition0   -> <conc>(ListPlusOfDefinition0,ListPlusOfDefinition0)
    ListPlusOfDefinition0   -> <cons>(Definition,ListStarOfDefinition0)
    ListStarOfImport0       -> ListPlusOfImport0
    ListStarOfImport0       -> <nil>()
    ListStarOfImport0       -> <conc>(ListStarOfImport0,ListStarOfImport0)
    ListPlusOfImport0       -> <conc>(ListStarOfImport0,ListPlusOfImport0)
    ListPlusOfImport0       -> <conc>(ListPlusOfImport0,ListStarOfImport0)
    ListPlusOfImport0       -> <conc>(ListPlusOfImport0,ListPlusOfImport0)
    ListPlusOfImport0       -> <cons>(Import,ListStarOfImport0)
    ListStarOfStringChar0   -> <string>
    ListPlusOfStringChar0   -> <string>
    OptLit0                 -> <string>
    Type                    -> IntType()
    Type                    -> StringType()
    Type                    -> Type(ID)
    Exp                     -> IntLit(INT)
    Exp                     -> StringLit(STRING)
    Exp                     -> PropAccess(Exp,ID)
    Exp                     -> Var(ID)
    Exp                     -> Call(ID,ListStarOfExp0)
    Stm                     -> Print(Exp)
    Stm                     -> Block(ListStarOfStm0)
    Stm                     -> Assign(Exp,Exp)
    Stm                     -> VarDeclInit(ID,Type,Exp)
    Stm                     -> VarDecl(ID,Type)
    Param                   -> Param(ID,Type)
    Member                  -> Function(ID,ListStarOfParam0,Stm)
    Member                  -> Property(ID,Type)
    JoinPoint               -> Assigned(Type)
    AdviceType              -> After()
    AdviceType              -> Before()
    AspectMember            -> Advice(ID,AdviceType,ListStarOfParam0,ID,ListStarOfExp0,Stm)
    AspectMember            -> Pointcut(ID,ListStarOfParam0,ListPlusOfJoinPoint0)
    Definition              -> Aspect(ID,ListStarOfAspectMember0)
    ImportPart              -> EntityImport(ID,ID)
    ImportPart              -> WildcardImport(ID)
    Import                  -> Import(ImportPart)
    Definition              -> Entity(ID,ListStarOfMember0)
    Start                   -> Module(ID,ListStarOfImport0,ListStarOfDefinition0)
    EOF                     -> <string>
    CommentChar             -> <string>
    BackSlashChar           -> <string>
    StringChar              -> <string>
    STRING                  -> <string>
    INT                     -> <string>
    ID                      -> <string>
