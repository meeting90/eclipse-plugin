module types

imports
  
  include/EntityWithAspects
  lib/index-library
  lib/analysis-library
  names
  
signature constructors

  Type : STRING -> Type

rules // Type projections
    
  type-of:
  	Type(x) -> Type(x)
  	
  type-of:
  	StringType() -> Type("String")
  	
  type-of:
  	IntType() -> Type("Int")
  	
  type-of:
    StringLit(_) -> <type-of> StringType()
    
  type-of:
    IntLit(_) -> <type-of> IntType()
  
  type-of:
    Var(v) -> <type-of> <index-lookup> v
  
  type-of:
    PropAccess(e, p) -> <type-of> <index-lookup> p

  type-of:
    Def(uri) -> <type-of> <index-get-data(|Type())> Def(uri)

rules // Comparison
  
  is-assignable-to:
    (to-type, from-type) -> to-type
    where
      <eq> (from-type, to-type)

rules // Utility

  print-type = 
    switch ?input
      case IntType() : !"Int"
      case StringType() : !"String"
      case Type(?t) : <strip-annos> t
      case [?type|[]] : <print-type> type
      case [?type|?types]; not (<?[]> types) : !$[[<print-type> type], [<print-type> types]] 
      otherwise : ?name#(_); !$[[name]]
    end
    
  primitive-types = 
    ![IntType(), StringType()]
    
  is-primitive-type = ?IntType()
  is-primitive-type = ?StringType()
  is-primitive-type = ?Type("String")
  is-primitive-type = ?Type("Int")
  